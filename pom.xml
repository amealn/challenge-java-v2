<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>challenge-java-v2</groupId>
  <artifactId>challenge-java-v2</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>challenge-java-v2</name>
  <properties>
  	<maven.compiler.source>17</maven.compiler.source>
  	<maven.compiler.target>17</maven.compiler.target>
  </properties>
  <profiles>
    <profile>
        <id>test</id>
        <properties>
            <composeFile>${project.basedir}/docker-compose.test.yml</composeFile>
        </properties>
    </profile>
    <profile>
        <id>prod</id>
        <properties>
            <composeFile>${project.basedir}/docker-compose.yml</composeFile>
        </properties>
    </profile>
  </profiles>
  <build>
  	<finalName>challenge-java-v2</finalName>
	<plugins>
		<plugin>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-maven-plugin</artifactId>
			<version>3.4.2</version>
			<executions>
                <execution>
                    <goals>
                        <goal>repackage</goal>
                    </goals>
                </execution>
            </executions>
		</plugin>
		<plugin>
        	<groupId>com.spotify</groupId>
        	<artifactId>docker-maven-plugin</artifactId>
        	<version>1.2.2</version>
        	<executions>
            	<execution>
                	<goals>
                    	<goal>build</goal>
                	</goals>
            	</execution>
        	</executions>
        	<configuration>
            	<imageName>challenge-java-v2</imageName>
            	<dockerDirectory>${project.basedir}</dockerDirectory>
            	<buildArgs>
                	<JAR_FILE>target/challenge-java-v2.jar</JAR_FILE>
            	</buildArgs>
            	<rm>true</rm>
        	</configuration>
    	</plugin>
    	<plugin>
    		<groupId>com.dkanejs.maven.plugins</groupId>
    		<artifactId>docker-compose-maven-plugin</artifactId>
    		<version>4.0.0</version>
    		<executions>
        		<execution>
            		<goals>
                		<goal>up</goal>
            		</goals>
        		</execution>
    		</executions>
    		<configuration>
        		<projectName>challenge-java-v2</projectName>
        		<composeFile>${composeFile}</composeFile>
    		</configuration>
		</plugin>
		<plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.12</version>
            <executions>
                <execution>
                    <goals>
                        <goal>prepare-agent</goal>
                    </goals>
                </execution>
                <execution>
                    <id>report</id>
                    <phase>post-integration-test</phase>
                    <goals>
                        <goal>report</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
	</plugins>
  </build>
  <dependencies>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
    </dependency>    
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>
    <dependency>
    	<groupId>org.springframework.boot</groupId>
    	<artifactId>spring-boot-starter-data-redis</artifactId>
	</dependency>
    <dependency>
    	<groupId>org.springdoc</groupId>
    	<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
    	<version>2.8.5</version>
	</dependency>
	<dependency>
    	<groupId>org.springdoc</groupId>
    	<artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
    	<version>2.8.5</version>
	</dependency>
	<dependency>
    	<groupId>org.springframework.boot</groupId>
    	<artifactId>spring-boot-starter-validation</artifactId>
	</dependency>
	<dependency>
    	<groupId>org.springframework.boot</groupId>
    	<artifactId>spring-boot-starter-data-mongodb</artifactId>
	</dependency>
	<dependency>
    	<groupId>org.springframework.boot</groupId>
    	<artifactId>spring-boot-starter-actuator</artifactId>
	</dependency>
	<dependency>
    	<groupId>me.paulschwarz</groupId>
    	<artifactId>spring-dotenv</artifactId>
    	<version>4.0.0</version>
	</dependency>
	<dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <scope>test</scope>
    </dependency>
	<dependency>
    	<groupId>org.springframework.boot</groupId>
    	<artifactId>spring-boot-testcontainers</artifactId>
    	<scope>test</scope>
	</dependency>
	<dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>junit-jupiter</artifactId>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>com.redis</groupId>
        <artifactId>testcontainers-redis</artifactId>
        <scope>test</scope>
    </dependency>
	<dependency>
    	<groupId>org.testcontainers</groupId>
    	<artifactId>mongodb</artifactId>
    	<scope>test</scope>
	</dependency>
 </dependencies>
 <dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-dependencies</artifactId>
            <version>3.4.4</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
    </dependencies>
 </dependencyManagement>
</project>